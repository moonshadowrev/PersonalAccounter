services:
  # MariaDB Database
  database:
    image: mariadb:10.11
    container_name: accounting_panel_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_general_ci
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
    networks:
      - accounting_network
    ports:
      - "${DB_PORT_EXPOSE:-3306}:3306"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 5
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci

  # PHP-FPM Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: accounting_panel_app
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL}
      - APP_DOMAIN=${APP_DOMAIN}
      - APP_TIMEZONE=${APP_TIMEZONE:-UTC}
      - DB_HOST=database
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=3306
      - SESSION_LIFETIME=${SESSION_LIFETIME:-0}
      - SESSION_SECURE=${SESSION_SECURE:-false}
      - SESSION_SAMESITE=${SESSION_SAMESITE:-Lax}
      - LOGIN_ATTEMPTS_LIMIT=${LOGIN_ATTEMPTS_LIMIT:-5}
      - LOGIN_ATTEMPTS_TIMEOUT=${LOGIN_ATTEMPTS_TIMEOUT:-300}
      - API_MAX_FAILED_ATTEMPTS=${API_MAX_FAILED_ATTEMPTS:-5}
      - API_BLOCK_DURATION=${API_BLOCK_DURATION:-300}
      - API_DEFAULT_RATE_LIMIT=${API_DEFAULT_RATE_LIMIT:-60}
      - API_MAX_RATE_LIMIT=${API_MAX_RATE_LIMIT:-1000}
      - LOG_CHANNEL=${LOG_CHANNEL:-file}
      - LOG_LEVEL=${LOG_LEVEL:-warning}
      - LOG_MAX_FILES=${LOG_MAX_FILES:-5}
    volumes:
      - ./app:/var/www/html/app:cached
      - ./bootstrap:/var/www/html/bootstrap:cached
      - ./config:/var/www/html/config:cached
      - ./database:/var/www/html/database:cached
      - ./public:/var/www/html/public:cached
      - ./vendor:/var/www/html/vendor:cached
      - app_logs:/var/www/html/logs
      - app_sessions:/var/www/html/sessions
      - app_uploads:/var/www/html/public/uploads
    networks:
      - accounting_network
    healthcheck:
      test: ["CMD-SHELL", "pidof php-fpm || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Caddy Web Server
  caddy:
    image: caddy:2.7-alpine
    container_name: accounting_panel_caddy
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./docker/caddy/ssl:/etc/caddy/ssl:ro
      - ./public:/var/www/html/public:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - accounting_network
    environment:
      - DOMAIN=${APP_DOMAIN}
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL}
      - APP_DOMAIN=${APP_DOMAIN}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # phpMyAdmin (only in development)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2
    container_name: accounting_panel_phpmyadmin
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      UPLOAD_LIMIT: 64M
      MEMORY_LIMIT: 256M
      PMA_ARBITRARY: 1
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    networks:
      - accounting_network
    profiles:
      - development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Cron Service for Scheduled Tasks
  cron:
    build: 
      context: .
      dockerfile: docker/cron/Dockerfile
    container_name: accounting_panel_cron
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
      database:
        condition: service_healthy
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - DB_HOST=database
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=3306
    volumes:
      - ./:/var/www/html:cached
      - app_logs:/var/www/html/logs
    networks:
      - accounting_network
    healthcheck:
      test: ["CMD", "pgrep", "cron"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  accounting_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  db_data:
    driver: local
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  app_logs:
    driver: local
  app_sessions:
    driver: local
  app_uploads:
    driver: local 