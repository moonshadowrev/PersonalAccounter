version: '3.8'

services:
  # MariaDB Database
  database:
    image: mariadb:10.11
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.3
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password_123}
      MYSQL_DATABASE: ${DB_NAME:-accounting_panel}
      MYSQL_USER: ${DB_USER:-accounting_user}
      MYSQL_PASSWORD: ${DB_PASS:-user_password_123}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - accounting_network
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  # PHP-FPM Application
  app:
    image: accounting_panel:latest
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.3
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - APP_URL=${APP_URL:-http://localhost}
      - APP_DOMAIN=${APP_DOMAIN:-localhost}
      - APP_TIMEZONE=${APP_TIMEZONE:-UTC}
      - DB_HOST=database
      - DB_NAME=${DB_NAME:-accounting_panel}
      - DB_USER=${DB_USER:-accounting_user}
      - DB_PASS=${DB_PASS:-user_password_123}
      - DB_PORT=3306
      - SESSION_LIFETIME=${SESSION_LIFETIME:-0}
      - SESSION_SECURE=${SESSION_SECURE:-true}
      - SESSION_SAMESITE=${SESSION_SAMESITE:-Lax}
    volumes:
      - app_logs:/var/www/html/logs
      - app_sessions:/var/www/html/sessions
      - app_uploads:/var/www/html/public/uploads
    networks:
      - accounting_network
    depends_on:
      - database
    healthcheck:
      test: ["CMD-SHELL", "pidof php-fpm"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Caddy Web Server
  caddy:
    image: caddy:2.7-alpine
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 30s
        max_failure_ratio: 0.3
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: ingress
      - target: 443
        published: 443
        protocol: tcp
        mode: ingress
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - accounting_network
    environment:
      - DOMAIN=${APP_DOMAIN:-localhost}
    depends_on:
      - app

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD:-root_password_123}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password_123}
      UPLOAD_LIMIT: 64M
      MEMORY_LIMIT: 256M
    ports:
      - target: 80
        published: 8080
        protocol: tcp
        mode: ingress
    networks:
      - accounting_network
    depends_on:
      - database

  # Cron Service for Scheduled Tasks
  cron:
    image: accounting_panel_cron:latest
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    environment:
      - DB_HOST=database
      - DB_NAME=${DB_NAME:-accounting_panel}
      - DB_USER=${DB_USER:-accounting_user}
      - DB_PASS=${DB_PASS:-user_password_123}
    volumes:
      - app_logs:/var/www/html/logs
    networks:
      - accounting_network
    depends_on:
      - app
      - database

networks:
  accounting_network:
    driver: overlay
    attachable: true

volumes:
  db_data:
  caddy_data:
  caddy_config:
  app_logs:
  app_sessions:
  app_uploads: 